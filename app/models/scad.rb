class Scad
  attr_accessor :project, :code, :path
  
  def initialize(project, code, path)
    @project  = project
    @code     = code
    @path     = path
  end
  
  def params
    params = {}

    @code.scan(/^\/\/.*\n.*=.*;.*$/).each do |param_block|
      description, param_line = param_block.split("\n")
      
      if param_line =~ /(.*)=(.*);(.*)/

        param_name    = $1.to_s.strip
        param_value   = $2.to_s.strip
        param_options = $3.to_s.strip
        
        params[param_name] = {}
        params[param_name]["description"] = description.gsub("//","").strip
        params[param_name]["value"] = param_value.gsub("\"","")
        params[param_name]["options"] = param_options.split(",").collect{|o| o.to_s.gsub(/\/\//,"").strip}

      end
    end

    params
  end
  
  def to_stl(params={})
    Scad.scad_to_stl(@code, "script_#{id}", params)
  end
  
  def to_json3d(params={})
    json3d_hash = {"obj" => [{"vrt" => [], "fac" => [], "nrm" => [], "mat" => [{"r"=>150,"g"=>225,"b"=>219}]}]}

    obj_hash = to_obj_hash(params)

    json3d_hash["obj"][0]["vrt"] = obj_hash["vertexes"]
    json3d_hash["obj"][0]["nrm"] = obj_hash["normals"]
    json3d_hash["obj"][0]["fac"] = obj_hash["faces"]

    # return hash in json format
    json3d_hash.to_json
    # '{"obj":[{"vrt":[[16.4963,19.1226,-0.9524],[15.2876,19.1226,-7.074],[11.9734,19.1226,-12.0259],[7.0215,19.1226,-15.3401],[0.8999,19.1226,-16.5489],[-5.6447,19.1226,-15.3401],[-10.5496,19.1226,-12.0259],[-13.6288,19.1226,-7.074],[-14.6965,19.1226,-0.9524],[-13.4878,19.1226,5.1692],[-10.1736,19.1226,10.121],[-5.2217,19.1226,13.4353],[0.8999,19.1226,14.644],[7.0215,19.1226,13.4353],[11.9734,19.1226,10.121],[15.2876,19.1226,5.1692],[23.1805,6.4248,-0.9524],[21.4538,6.4248,-9.6976],[16.7191,6.4248,-16.7717],[9.645,6.4248,-21.5063],[0.8999,6.4248,-23.233],[-7.8452,6.4248,-21.5063],[-14.9193,6.4248,-16.7717],[-19.654,6.4248,-9.6976],[-20.9386,3.2165,-0.9524],[-19.654,6.4248,7.7927],[-14.9193,6.4248,14.8668],[-7.8452,6.4248,19.6015],[0.8999,6.4248,21.3282],[9.645,6.4248,19.6015],[16.7191,6.4248,14.8668],[21.4538,6.4248,7.7927],[22.3102,-0.8908,-0.9524],[20.6509,-0.8908,-9.356],[16.1012,-0.8908,-16.1537],[9.3034,-0.8908,-20.7034],[0.8999,-0.8908,-22.3627],[-7.5036,-0.8908,-20.7034],[-14.3014,-0.8908,-16.1537],[-18.8511,-0.8908,-9.356],[-20.5104,-0.8908,-0.9524],[-18.8511,-0.8908,7.4511],[-14.3014,-0.8908,14.2489],[-7.5036,-0.8908,18.7986],[0.8999,-0.8908,20.4579],[9.3034,-0.8908,18.7986],[16.1012,-0.8908,14.2489],[20.6509,-0.8908,7.4511],[17.2318,-6.5566,-0.9524],[15.966,-6.5566,-7.3627],[12.4955,-6.5566,-12.548],[7.3102,-6.5566,-16.0186],[0.8999,-6.5566,-17.2843],[-5.5104,-6.5566,-16.0186],[-10.6957,-6.5566,-12.548],[-14.1663,-6.5566,-7.3627],[-15.432,-6.5566,-0.9524],[-14.1663,-6.5566,5.4578],[-10.6957,-6.5566,10.6432],[-5.5104,-6.5566,14.1137],[0.8999,-6.5566,15.3794],[7.3102,-6.5566,14.1137],[12.4955,-6.5566,10.6432],[15.966,-6.5566,5.4578],[-16.6069,14.2395,-0.9524],[-26.2732,14.7165,-0.9524],[-28.9606,13.507,-0.9524],[-16.4125,14.7047,-2.8323],[-26.5491,15.1771,-2.8323],[-29.4675,13.6326,-2.8323],[-15.9848,15.7283,-3.459],[-27.1562,16.1904,-3.459],[-30.5826,13.9091,-3.459],[-15.5572,16.7519,-2.8323],[-27.7633,17.2037,-2.8323],[-31.6977,14.1855,-2.8323],[-15.3628,17.2172,-0.9524],[-28.0393,17.6642,-0.9524],[-32.2045,14.3111,-0.9524],[-15.5572,16.7519,0.9275],[-27.7633,17.2037,0.9275],[-31.6977,14.1855,0.9275],[-15.9848,15.7283,1.5541],[-27.1562,16.1904,1.5541],[-30.5826,13.9091,1.5541],[-16.4125,14.7047,0.9275],[-26.5491,15.1771,0.9275],[-29.4675,13.6326,0.9275],[-28.7438,10.1669,-0.9524],[-27.3686,7.4253,-0.9524],[-24.9491,4.6838,-0.9524],[-20.9386,3.2165,-0.9524],[-29.2184,9.9476,-2.8323],[-27.7059,7.0908,-2.8323],[-25.0674,4.2707,-2.8323],[-21.2067,1.89,-2.8323],[-30.2625,9.4652,-3.459],[-28.4479,6.3548,-3.459],[-25.3277,3.3619,-3.459],[-20.8237,0.7411,-3.459],[-31.3066,8.9827,-2.8323],[-29.1898,5.6188,-2.8323],[-25.588,2.4532,-2.8323],[-20.4408,-0.4077,-2.8323],[-31.7812,8.7635,-0.9524],[-29.5271,5.2843,-0.9524],[-25.7063,2.0401,-0.9524],[-20.2667,-0.9299,-0.9524],[-31.3066,8.9827,0.9275],[-29.1898,5.6188,0.9275],[-25.588,2.4532,0.9275],[-20.4408,-0.4077,0.9275],[-30.2625,9.4652,1.5541],[-28.4479,6.3548,1.5541],[-25.3277,3.3619,1.5541],[-20.8237,0.7411,1.5541],[-29.2184,9.9476,0.9275],[-27.7059,7.0908,0.9275],[-25.0674,4.2707,0.9275],[-21.2067,1.89,0.9275],[19.8384,8.2608,-0.9524],[25.1823,9.488,-0.9524],[27.4974,12.4385,-0.9524],[28.7681,16.0155,-0.9524],[30.9787,19.1226,-0.9524],[19.8384,6.8248,-5.0883],[25.5903,8.4232,-4.6868],[28.0196,11.8183,-3.8036],[29.4045,15.7912,-2.9205],[32.0231,19.1226,-2.519],[19.8384,3.6655,-6.4669],[26.4878,6.0806,-5.9316],[29.1684,10.4541,-4.7541],[30.8047,15.2975,-3.5765],[19.8384,0.5061,-5.0883],[27.3853,3.7381,-4.6868],[30.3173,9.0898,-3.8036],[32.2048,14.8039,-2.9205],[36.6185,19.1226,-2.519],[19.8384,-0.9299,-0.9524],[27.7933,2.6733,-0.9524],[30.8395,8.4697,-0.9524],[32.8413,14.5795,-0.9524],[37.6629,19.1226,-0.9524],[19.8384,0.5061,3.1834],[27.3853,3.7381,2.782],[30.3173,9.0898,1.8988],[32.2048,14.8039,1.0156],[36.6185,19.1226,0.6142],[19.8384,3.6655,4.562],[26.4878,6.0806,4.0268],[29.1684,10.4541,2.8492],[30.8047,15.2975,1.6716],[19.8384,6.8248,3.1834],[25.5903,8.4232,2.782],[28.0196,11.8183,1.8988],[29.4045,15.7912,1.0156],[32.0231,19.1226,0.6142],[31.7794,19.5926,-0.9524],[32.3713,19.7493,-0.9524],[32.5453,19.5926,-0.9524],[32.0928,19.1226,-0.9524],[32.898,19.6156,-2.4211],[33.4211,19.786,-2.2057],[33.4368,19.6247,-1.9903],[32.789,19.1226,-1.8924],[35.3587,19.6661,-2.9107],[35.7308,19.8668,-2.6235],[35.3979,19.6954,-2.3363],[34.3208,19.1226,-2.2057],[37.8195,19.7165,-2.4211],[38.0404,19.9476,-2.2057],[37.359,19.7661,-1.9903],[35.8526,19.1226,-1.8924],[38.938,19.7395,-0.9524],[39.0903,19.9843,-0.9524],[38.2504,19.7982,-0.9524],[36.5489,19.1226,-0.9524],[37.8195,19.7165,0.5163],[38.0404,19.9476,0.3009],[37.359,19.7661,0.0855],[35.8526,19.1226,-0.0125],[35.3587,19.6661,1.0058],[35.7308,19.8668,0.7186],[35.3979,19.6954,0.4314],[34.3208,19.1226,0.3009],[32.898,19.6156,0.5163],[33.4211,19.786,0.3009],[33.4368,19.6247,0.0855],[32.789,19.1226,-0.0125],[4.4018,26.9296,-2.4458],[2.9236,23.953,-1.8146],[2.9553,22.4647,-1.8269],[2.3933,26.9296,-4.4543],[0.8999,23.953,-3.1457],[0.8999,22.4647,-3.1805],[-0.5935,26.9296,-4.4543],[-2.602,26.9296,-2.4458],[-1.1238,23.953,-1.8146],[-1.1555,22.4647,-1.8269],[-2.602,26.9296,0.541],[-0.6585,23.953,0.606],[-0.682,22.4647,0.6295],[-0.5935,26.9296,2.5495],[2.3933,26.9296,2.5495],[1.7621,23.953,1.0713],[1.7744,22.4647,1.103],[4.4018,26.9296,0.541],[2.9236,23.953,-0.0902],[2.9553,22.4647,-0.0779],[15.3823,19.1226,-0.9524],[14.2599,19.1226,-6.6368],[11.1824,19.1226,-11.2349],[6.5842,19.1226,-14.3124],[0.8999,19.1226,-15.4348],[-4.7844,19.1226,-14.3124],[-9.3826,19.1226,-11.2349],[-12.4601,19.1226,-6.6368],[-13.5825,19.1226,-0.9524],[-12.4601,19.1226,4.7319],[-9.3826,19.1226,9.3301],[-4.7844,19.1226,12.4076],[0.8999,19.1226,13.53],[6.5842,19.1226,12.4076],[11.1824,19.1226,9.3301],[14.2599,19.1226,4.7319]],"fac":[[0,1,17,0],[17,16,0,0],[1,2,18,0],[18,17,1,0],[2,3,19,0],[19,18,2,0],[3,4,20,0],[20,19,3,0],[4,5,21,0],[21,20,4,0],[5,6,22,0],[22,21,5,0],[6,7,23,0],[23,22,6,0],[7,8,24,0],[24,23,7,0],[8,9,25,0],[25,24,8,0],[9,10,26,0],[26,25,9,0],[10,11,27,0],[27,26,10,0],[11,12,28,0],[28,27,11,0],[12,13,29,0],[29,28,12,0],[13,14,30,0],[30,29,13,0],[14,15,31,0],[31,30,14,0],[15,0,16,0],[16,31,15,0],[16,17,33,0],[33,32,16,0],[32,33,49,0],[49,48,32,0],[17,18,34,0],[34,33,17,0],[33,34,50,0],[50,49,33,0],[18,19,35,0],[35,34,18,0],[34,35,51,0],[51,50,34,0],[19,20,36,0],[36,35,19,0],[35,36,52,0],[52,51,35,0],[20,21,37,0],[37,36,20,0],[36,37,53,0],[53,52,36,0],[21,22,38,0],[38,37,21,0],[37,38,54,0],[54,53,37,0],[22,23,39,0],[39,38,22,0],[38,39,55,0],[55,54,38,0],[23,24,40,0],[40,39,23,0],[39,40,56,0],[56,55,39,0],[24,25,41,0],[41,40,24,0],[40,41,57,0],[57,56,40,0],[25,26,42,0],[42,41,25,0],[41,42,58,0],[58,57,41,0],[26,27,43,0],[43,42,26,0],[42,43,59,0],[59,58,42,0],[27,28,44,0],[44,43,27,0],[43,44,60,0],[60,59,43,0],[28,29,45,0],[45,44,28,0],[44,45,61,0],[61,60,44,0],[29,30,46,0],[46,45,29,0],[45,46,62,0],[62,61,45,0],[30,31,47,0],[47,46,30,0],[46,47,63,0],[63,62,46,0],[31,16,32,0],[32,47,31,0],[47,32,48,0],[48,63,47,0],[48,49,63,0],[49,50,63,0],[50,51,63,0],[51,52,63,0],[52,53,63,0],[53,54,63,0],[55,56,54,0],[56,57,54,0],[57,58,63,0],[63,54,57,0],[58,59,63,0],[59,60,63,0],[60,61,63,0],[61,62,63,0],[64,67,68,0],[68,65,64,0],[65,68,69,0],[69,66,65,0],[67,70,71,0],[71,68,67,0],[68,71,72,0],[72,69,68,0],[70,73,74,0],[74,71,70,0],[71,74,75,0],[75,72,71,0],[73,76,77,0],[77,74,73,0],[74,77,78,0],[78,75,74,0],[76,79,80,0],[80,77,76,0],[77,80,81,0],[81,78,77,0],[79,82,83,0],[83,80,79,0],[80,83,84,0],[84,81,80,0],[82,85,86,0],[86,83,82,0],[83,86,87,0],[87,84,83,0],[85,64,65,0],[65,86,85,0],[86,65,66,0],[66,87,86,0],[66,69,92,0],[92,88,66,0],[88,92,93,0],[93,89,88,0],[89,93,94,0],[94,90,89,0],[90,94,95,0],[95,91,90,0],[69,72,96,0],[96,92,69,0],[92,96,97,0],[97,93,92,0],[93,97,98,0],[98,94,93,0],[94,98,99,0],[99,95,94,0],[72,75,100,0],[100,96,72,0],[96,100,101,0],[101,97,96,0],[97,101,102,0],[102,98,97,0],[98,102,103,0],[103,99,98,0],[75,78,104,0],[104,100,75,0],[100,104,105,0],[105,101,100,0],[101,105,106,0],[106,102,101,0],[102,106,107,0],[107,103,102,0],[78,81,108,0],[108,104,78,0],[104,108,109,0],[109,105,104,0],[105,109,110,0],[110,106,105,0],[106,110,111,0],[111,107,106,0],[81,84,112,0],[112,108,81,0],[108,112,113,0],[113,109,108,0],[109,113,114,0],[114,110,109,0],[110,114,115,0],[115,111,110,0],[84,87,116,0],[116,112,84,0],[112,116,117,0],[117,113,112,0],[113,117,118,0],[118,114,113,0],[114,118,119,0],[119,115,114,0],[87,66,88,0],[88,116,87,0],[116,88,89,0],[89,117,116,0],[117,89,90,0],[90,118,117,0],[118,90,91,0],[91,119,118,0],[120,125,126,0],[126,121,120,0],[121,126,127,0],[127,122,121,0],[122,127,128,0],[128,123,122,0],[123,128,129,0],[129,124,123,0],[125,130,131,0],[131,126,125,0],[126,131,132,0],[132,127,126,0],[127,132,133,0],[133,128,127,0],[128,133,166,0],[166,129,128,0],[130,134,135,0],[135,131,130,0],[131,135,136,0],[136,132,131,0],[132,136,137,0],[137,133,132,0],[133,137,138,0],[138,166,133,0],[134,139,140,0],[140,135,134,0],[135,140,141,0],[141,136,135,0],[136,141,142,0],[142,137,136,0],[137,142,143,0],[143,138,137,0],[139,144,145,0],[145,140,139,0],[140,145,146,0],[146,141,140,0],[141,146,147,0],[147,142,141,0],[142,147,148,0],[148,143,142,0],[144,149,150,0],[150,145,144,0],[145,150,151,0],[151,146,145,0],[146,151,152,0],[152,147,146,0],[147,152,182,0],[182,148,147,0],[149,153,154,0],[154,150,149,0],[150,154,155,0],[155,151,150,0],[151,155,156,0],[156,152,151,0],[152,156,157,0],[157,182,152,0],[153,120,121,0],[121,154,153,0],[154,121,122,0],[122,155,154,0],[155,122,123,0],[123,156,155,0],[156,123,124,0],[124,157,156,0],[124,129,162,0],[162,158,124,0],[158,162,163,0],[163,159,158,0],[159,163,164,0],[164,160,159,0],[160,164,165,0],[165,161,160,0],[166,162,129,0],[162,166,167,0],[167,163,162,0],[163,167,168,0],[168,164,163,0],[164,168,169,0],[169,165,164,0],[166,138,170,0],[166,170,171,0],[171,167,166,0],[167,171,172,0],[172,168,167,0],[168,172,173,0],[173,169,168,0],[138,143,174,0],[174,170,138,0],[170,174,175,0],[175,171,170,0],[171,175,176,0],[176,172,171,0],[172,176,177,0],[177,173,172,0],[143,148,178,0],[178,174,143,0],[174,178,179,0],[179,175,174,0],[175,179,180,0],[180,176,175,0],[176,180,181,0],[181,177,176,0],[182,178,148,0],[178,182,183,0],[183,179,178,0],[179,183,184,0],[184,180,179,0],[180,184,185,0],[185,181,180,0],[182,157,186,0],[182,186,187,0],[187,183,182,0],[183,187,188,0],[188,184,183,0],[184,188,189,0],[189,185,184,0],[157,124,158,0],[158,186,157,0],[186,158,159,0],[159,187,186,0],[187,159,160,0],[160,188,187,0],[188,160,161,0],[161,189,188,0],[190,193,194,1],[194,191,190,1],[191,194,195,1],[195,192,191,1],[196,193,190,1],[193,196,194,1],[197,196,190,1],[198,194,196,1],[194,198,199,1],[199,195,194,1],[196,197,198,1],[200,197,190,1],[197,200,201,1],[201,198,197,1],[198,201,202,1],[202,199,198,1],[203,200,190,1],[200,203,201,1],[204,203,190,1],[205,201,203,1],[201,205,206,1],[206,202,201,1],[203,204,205,1],[207,204,190,1],[204,207,208,1],[208,205,204,1],[205,208,209,1],[209,206,205,1],[207,190,191,1],[191,208,207,1],[208,191,192,1],[192,209,208,1],[212,211,192,1],[195,212,192,1],[212,195,213,1],[214,213,195,1],[215,214,195,1],[216,215,195,1],[195,199,217,1],[217,216,195,1],[218,217,199,1],[202,218,199,1],[218,202,219,1],[220,219,202,1],[221,220,202,1],[222,221,202,1],[202,206,223,1],[223,222,202,1],[224,223,206,1],[209,224,206,1],[224,209,225,1],[209,192,211,1],[209,211,210,1],[210,225,209,1]],"nrm":[[0.8717,0.4589,-0.1721],[0.8717,0.4589,-0.1721],[0.7378,0.4603,-0.4938],[0.7378,0.4603,-0.4938],[0.4938,0.4603,-0.7378],[0.4938,0.4603,-0.7378],[0.1721,0.4589,-0.8717],[0.1721,0.4589,-0.8717],[-0.1619,0.4536,-0.8764],[-0.1721,0.4589,-0.8717],[-0.5003,0.4489,-0.7404],[-0.4975,0.4472,-0.7433],[-0.7559,0.4558,-0.47],[-0.7451,0.4428,-0.4987],[-0.9189,0.3606,-0.1603],[-0.905,0.4247,0.0229],[-0.8717,0.4589,0.1721],[-0.9309,0.3653,0.0027],[-0.7378,0.4603,0.4938],[-0.7378,0.4603,0.4938],[-0.4938,0.4603,0.7378],[-0.4938,0.4603,0.7378],[-0.1721,0.4589,0.8717],[-0.1721,0.4589,0.8717],[0.1721,0.4589,0.8717],[0.1721,0.4589,0.8717],[0.4938,0.4603,0.7378],[0.4938,0.4603,0.7378],[0.7378,0.4603,0.4938],[0.7378,0.4603,0.4938],[0.8717,0.4589,0.1721],[0.8717,0.4589,0.1721],[0.9744,-0.1159,-0.1924],[0.9744,-0.1159,-0.1924],[0.7367,-0.6603,-0.1455],[0.7367,-0.6603,-0.1455],[0.8254,-0.1164,-0.5524],[0.8254,-0.1164,-0.5524],[0.623,-0.6618,-0.417],[0.623,-0.6618,-0.417],[0.5524,-0.1164,-0.8254],[0.5524,-0.1164,-0.8254],[0.417,-0.6618,-0.623],[0.417,-0.6618,-0.623],[0.1924,-0.1159,-0.9744],[0.1924,-0.1159,-0.9744],[0.1455,-0.6603,-0.7367],[0.1455,-0.6603,-0.7367],[-0.1924,-0.1159,-0.9744],[-0.1924,-0.1159,-0.9744],[-0.1455,-0.6603,-0.7367],[-0.1455,-0.6603,-0.7367],[-0.5524,-0.1164,-0.8254],[-0.5524,-0.1164,-0.8254],[-0.417,-0.6618,-0.623],[-0.417,-0.6618,-0.623],[-0.8254,-0.1164,-0.5524],[-0.8254,-0.1164,-0.5524],[-0.623,-0.6618,-0.417],[-0.623,-0.6618,-0.417],[-0.9782,-0.102,-0.1811],[-0.9744,-0.1159,-0.1924],[-0.7367,-0.6603,-0.1455],[-0.7367,-0.6603,-0.1455],[-0.9757,-0.1158,0.1858],[-0.976,-0.1017,0.1927],[-0.7367,-0.6603,0.1455],[-0.7367,-0.6603,0.1455],[-0.8254,-0.1164,0.5524],[-0.8254,-0.1164,0.5524],[-0.623,-0.6618,0.417],[-0.623,-0.6618,0.417],[-0.5524,-0.1164,0.8254],[-0.5524,-0.1164,0.8254],[-0.417,-0.6618,0.623],[-0.417,-0.6618,0.623],[-0.1924,-0.1159,0.9744],[-0.1924,-0.1159,0.9744],[-0.1455,-0.6603,0.7367],[-0.1455,-0.6603,0.7367],[0.1924,-0.1159,0.9744],[0.1924,-0.1159,0.9744],[0.1455,-0.6603,0.7367],[0.1455,-0.6603,0.7367],[0.5524,-0.1164,0.8254],[0.5524,-0.1164,0.8254],[0.417,-0.6618,0.623],[0.417,-0.6618,0.623],[0.8254,-0.1164,0.5524],[0.8254,-0.1164,0.5524],[0.623,-0.6618,0.417],[0.623,-0.6618,0.417],[0.9744,-0.1159,0.1924],[0.9744,-0.1159,0.1924],[0.7367,-0.6603,0.1455],[0.7367,-0.6603,0.1455],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,0],[0,-1,-0],[0,-1,-0],[0,-1,0],[0,-1,-0],[0,-1,-0],[-0,-1,-0],[-0,-1,-0],[-0.0451,-0.9686,-0.2444],[-0.048,-0.9718,-0.231],[0.4498,-0.85,-0.2743],[0.4045,-0.8988,-0.1691],[-0.0213,-0.5155,-0.8566],[-0.025,-0.5366,-0.8435],[0.26,-0.3904,-0.8832],[0.2962,-0.5597,-0.774],[0.0191,0.5162,-0.8562],[0.0221,0.5354,-0.8443],[-0.2867,0.3737,-0.8821],[-0.3293,0.4947,-0.8043],[0.0342,0.9693,-0.2434],[0.036,0.9719,-0.2328],[-0.6034,0.7495,-0.2722],[-0.5948,0.7754,-0.2122],[0.0359,0.9692,0.2436],[0.0343,0.9719,0.2331],[-0.5855,0.7633,0.273],[-0.6123,0.7606,0.2159],[0.0213,0.5155,0.8566],[0.0198,0.5344,0.845],[-0.26,0.3904,0.8832],[-0.3483,0.454,0.8201],[-0.024,-0.5147,0.8571],[-0.0221,-0.5354,0.8443],[0.2195,-0.4147,0.8831],[0.3293,-0.4947,0.8043],[-0.0478,-0.9684,0.2446],[-0.0453,-0.9718,0.2314],[0.3948,-0.8773,0.2729],[0.4599,-0.8691,0.1821],[0.9646,0.0652,-0.2557],[0.9659,0.0627,-0.2512],[0.8516,0.4508,-0.2676],[0.8691,0.436,-0.2335],[0.708,0.6624,-0.2449],[0.7362,0.6498,-0.1891],[0.5126,0.8313,-0.2149],[0.2799,0.7651,-0.5798],[0.4963,0.0357,-0.8674],[0.5027,0.034,-0.8638],[0.4147,0.2419,-0.8772],[0.4693,0.2484,-0.8474],[0.3561,0.3712,-0.8576],[0.4465,0.4177,-0.7913],[0.2839,0.4879,-0.8255],[0.3295,0.5344,-0.7783],[-0.4966,-0.0373,-0.8672],[-0.5019,-0.0362,-0.8642],[-0.4075,-0.2564,-0.8765],[-0.4548,-0.2653,-0.8501],[-0.3401,-0.3869,-0.8571],[-0.4152,-0.4328,-0.8002],[-0.2733,-0.4918,-0.8267],[-0.31,-0.5328,-0.7874],[-0.9641,-0.0736,-0.255],[-0.965,-0.0725,-0.2521],[-0.8091,-0.5242,-0.2654],[-0.8217,-0.5171,-0.2394],[-0.6277,-0.7392,-0.2441],[-0.6465,-0.7356,-0.2023],[-0.4677,-0.8567,-0.2177],[-0.4766,-0.8574,-0.1941],[-0.9642,-0.0725,0.2551],[-0.9649,-0.0736,0.2522],[-0.8159,-0.5134,0.2659],[-0.8147,-0.5278,0.2401],[-0.6401,-0.7283,0.2444],[-0.6337,-0.7463,0.2039],[-0.4742,-0.8532,0.2173],[-0.47,-0.8607,0.1956],[-0.4963,-0.0357,0.8674],[-0.5014,-0.0377,0.8644],[-0.4147,-0.2419,0.8772],[-0.4431,-0.2788,0.852],[-0.3561,-0.3712,0.8576],[-0.3904,-0.4442,0.8064],[-0.2839,-0.4879,0.8255],[-0.2954,-0.5315,0.7939],[0.4959,0.0335,0.8677],[0.5019,0.0362,0.8642],[0.4233,0.2241,0.8778],[0.4548,0.2653,0.8501],[0.3756,0.3514,0.8575],[0.4152,0.4328,0.8002],[0.2977,0.4827,0.8236],[0.31,0.5328,0.7874],[0.9647,0.0626,0.2559],[0.9657,0.0653,0.2514],[0.8612,0.432,0.2678],[0.859,0.4548,0.235],[0.727,0.6416,0.2446],[0.7166,0.6704,0.1924],[0.335,0.9156,0.2223],[0.4349,0.7053,0.5597],[-0.233,0.9187,-0.319],[-0.2142,0.9329,-0.2894],[-0.7537,0.6057,-0.255],[-0.7579,0.5947,-0.2682],[-0.8975,0.3672,-0.2442],[-0.8914,0.3166,-0.3244],[-0.7303,0.6109,-0.3058],[-0.716,0.5094,-0.4773],[-0.0713,0.3989,-0.9142],[-0.0627,0.4495,-0.8911],[-0.2349,0.3844,-0.8928],[-0.2467,0.4055,-0.8802],[-0.3388,0.3288,-0.8815],[-0.3122,0.3086,-0.8985],[-0.2648,0.4092,-0.8732],[-0.1509,0.2344,-0.9604],[0.2149,-0.3906,-0.8951],[0.2147,-0.3929,-0.8942],[0.5878,-0.1923,-0.7858],[0.5495,-0.1139,-0.8277],[0.5861,-0.0688,-0.8073],[0.4428,0.0678,-0.8941],[0.3342,-0.2572,-0.9067],[0.2498,-0.1139,-0.9616],[0.3934,-0.8685,-0.3016],[0.3896,-0.8736,-0.2917],[0.8628,-0.4534,-0.2235],[0.8655,-0.4325,-0.2526],[0.9237,-0.3026,-0.235],[0.9122,-0.2513,-0.3236],[0.656,-0.6962,-0.2915],[0.6501,-0.6241,-0.4334],[0.3888,-0.8703,0.3022],[0.3947,-0.8713,0.2916],[0.8703,-0.4404,0.2206],[0.856,-0.4499,0.2546],[0.934,-0.2729,0.2304],[0.8989,-0.2945,0.3243],[0.6815,-0.6689,0.2967],[0.6237,-0.6619,0.4158],[0.214,-0.3907,0.8953],[0.2156,-0.3925,0.8941],[0.6172,-0.1716,0.7679],[0.5212,-0.1468,0.8407],[0.6229,-0.0203,0.7821],[0.4242,-0.0002,0.9056],[0.3477,-0.2237,0.9105],[0.234,-0.1499,0.9606],[-0.0471,0.3995,0.9155],[-0.0882,0.4408,0.8932],[-0.2207,0.3904,0.8938],[-0.2588,0.3959,0.8811],[-0.3509,0.3181,0.8807],[-0.3065,0.3214,0.896],[-0.2975,0.3413,0.8917],[-0.1606,0.3102,0.937],[-0.212,0.9232,0.3206],[-0.2374,0.927,0.2903],[-0.761,0.5972,0.2534],[-0.7488,0.6058,0.2689],[-0.9152,0.3251,0.2383],[-0.8688,0.3748,0.3237],[-0.7739,0.5506,0.313],[-0.675,0.5848,0.45],[-0.4436,0.846,-0.2957],[-0.4744,0.8083,-0.3487],[-0.2417,0.9555,-0.1691],[-0.2516,0.9504,-0.1829],[0.545,0.6897,0.4767],[0.5742,0.6381,0.513],[0.5818,-0.6571,0.4794],[0.6355,-0.612,0.4708],[-0.1799,0.4888,-0.8537],[-0.1112,0.8764,-0.4685],[-0.1104,0.8923,-0.4378],[0.0753,0.8155,0.5738],[0.0759,0.8009,0.594],[0.1765,-0.1089,0.9783],[0.1999,-0.0673,0.9775],[0.1943,-0.2359,-0.9522],[0.1447,0.5972,-0.7889],[0.0905,0.7575,-0.6466],[-0.1074,0.9014,0.4195],[-0.1059,0.9032,0.416],[-0.1667,0.5179,0.8391],[-0.1718,0.5146,0.8401],[0.4182,-0.8645,-0.2788],[0.4406,-0.8378,-0.3225],[0.7157,-0.4453,-0.5381],[0.7613,-0.1374,-0.6337],[-0.2138,0.9652,0.1508],[-0.2098,0.9661,0.1502],[-0.3546,0.8931,0.2769],[-0.3635,0.8919,0.2692],[0.4428,-0.8467,0.2952],[0.4151,-0.858,0.3027],[0.7817,-0.1955,0.5923],[0.697,-0.4337,0.5711],[-0.2105,0.9663,-0.148],[-0.2137,0.9647,-0.1537],[-0.3612,0.8886,-0.2827],[-0.356,0.8965,-0.2637],[0.1943,-0.2359,0.9522],[0.1175,0.736,0.6666],[0.1198,0.6134,0.7807],[-0.1067,0.9034,-0.4153],[-0.1067,0.9007,-0.421],[-0.1674,0.5074,-0.8453],[-0.1705,0.5258,-0.8333],[-0.1799,0.4888,0.8537],[-0.1067,0.8894,0.4446],[-0.1148,0.8779,0.4648],[0.0794,0.8008,-0.5937],[0.0712,0.8181,-0.5706],[0.1748,-0.0336,-0.984],[0.1981,-0.1517,-0.9684],[-0.4796,0.8171,0.3197],[-0.4376,0.8402,0.3201],[-0.2519,0.9515,0.1769],[-0.24,0.9552,0.173],[0.5781,0.6424,-0.5031],[0.535,0.6945,-0.481],[0.6184,-0.5955,-0.5127],[0.5912,-0.6773,-0.4379],[0.5886,-0.5541,-0.5886],[0.5011,-0.4104,-0.7619],[0.5494,0.0195,-0.8353],[0.5499,0.0186,-0.835],[0,1,-0],[0,-0.4025,-0.9154],[0,1,-0],[-0.4622,-0.5409,-0.7027],[-0.5494,0.0186,-0.8353],[-0.5499,0.0195,-0.835],[-0.6322,-0.448,-0.6322],[0,1,0],[-0.8373,-0.5467,-0],[-0.8963,-0.4086,0.1723],[-0.9819,0.0185,0.1888],[-0.9817,0.0193,0.1892],[-0,1,0],[-0.6457,-0.4075,0.6457],[-0,1,0],[-0.1592,-0.5373,0.8282],[-0.1887,0.0193,0.9818],[-0.1892,0.0185,0.9818],[0,-0.4448,0.8956],[0,1,0],[0.6322,-0.448,0.6322],[0.6322,-0.448,0.6322],[0.707,0.0209,0.707],[0.707,0.0209,0.707],[0.8956,-0.4448,0],[0.8956,-0.4448,0],[0.9998,0.0213,-0],[0.9998,0.0213,0],[0.2218,0.9637,-0.1484],[0.1433,0.9655,-0.2176],[0.1446,0.9656,-0.2161],[0.0519,0.9635,-0.2628],[-0.0519,0.9635,-0.2628],[-0.1446,0.9656,-0.2161],[-0.1707,0.9506,-0.2593],[-0.2065,0.9686,-0.1382],[-0.2628,0.9635,-0.0519],[-0.2562,0.9654,0.0494],[-0.2563,0.9653,0.0506],[-0.2218,0.9637,0.1484],[-0.1484,0.9637,0.2218],[-0.0506,0.9653,0.2563],[-0.059,0.9502,0.306],[0.0484,0.9683,0.2449],[0.1484,0.9637,0.2218],[0.1831,0.9659,0.1831],[0.2218,0.9637,0.1484],[0.2835,0.959,-0],[0.2561,0.9653,-0.0506],[0.2628,0.9635,0.0519]]}],"mat":[{"r":227,"g":162,"b":150},{"r":145,"g":79,"b":20}]}'
  end

  def to_obj(params={})
    obj_hash = to_obj_hash(params)

    obj_data = "g CLOUDSCAD\n"
    obj_data << "\n"
    
    obj_hash["vertexes"].each do |vertex|
      obj_data << "v #{vertex.join(" ")} 1\n"
    end

    obj_data << "\n"
    
    obj_hash["normals"].each do |normal|
      obj_data << "vn #{normal.join(" ")}\n"
    end

    obj_data << "\n"
    
    index = 1
    obj_hash["faces"].each do |face|
      obj_data << "f #{face[0]}//#{index} #{face[1]}//#{index+1} #{face[2]}//#{index+2}\n"
      
      index += 3
    end
    
    obj_data
  end

  def to_obj_hash(params={})
    stl_data = to_stl(params)
    Scad.parse_stl(stl_data)
  end

  # TODO: cache results?!
  def self.scad_to_stl(scad_data, name, params={})    
    # save code to tmp dir
    scad_file = Tempfile.new(name, "#{Rails.root}/tmp")
    scad_file.print(scad_data)
    scad_file.flush

    # create a temporary stl file
    stl_file = Tempfile.new(name, "#{Rails.root}/tmp")
    stl_file.print("")
    stl_file.flush
    
    # shell out to openscad
    cmd = Scad.openscad_command(scad_file.path, stl_file.path, params)
    `#{cmd}`

    # read contents of stl file
    stl_data = stl_file.read

    # delete temp files
    scad_file.unlink
    stl_file.unlink
    
    # return stl data
    stl_data
  end

  def self.parse_stl(stl_data)
    vertexes = []
    normals = []
    faces = []
    
    vertex_indexes = []
    face_vertexes = []
    
    facet_count = 0
    stl_data.scan(/(facet normal.*?endfacet)/m) do
      facet_block = $1
      
      if facet_block =~ /facet normal (.*)/
        normals << $1.split(" ").collect{|f| BigDecimal(f.to_s)}
      end
      
      facet_block.scan(/vertex (.*)/) do
        vertex = $1.split(" ").collect{|f| BigDecimal(f.to_s)}
        # json3d_hash["obj"][0]["vrt"] << vertex #unless json3d_hash["obj"][0]["vrt"].include?(vertex)
        # 
        # vertex_indexes << vertex unless vertex_indexes.include?(vertex)
        # face_vertexes[facet_count] ||= []
        # face_vertexes[facet_count] << vertex

        unless vertexes.include?(vertex)
          vertexes << vertex
        end
        vertex_indexes << vertex unless vertex_indexes.include?(vertex)
        face_vertexes[facet_count] ||= []
        face_vertexes[facet_count] << vertex
      end
      
      facet_count += 1
    end

    face_vertexes.each_with_index do |face_vertex, index|
      unless vertexes.nil?
        faces[index] ||= []
        # FIXME: canvas3d needs the face_vertex to be reversed, but three.js doesn't?
        face_vertex.each do |vertex|
          faces[index] << vertex_indexes.index(vertex)
          # faces[index] << (vertex_indexes.index(vertex) + 1).to_s + " (#{vertex.collect{|v| v.to_s}.inspect})"
        end
        # texture
        faces[index] << 0
      end
    end
    
    # return parsed hash
    {"vertexes" => vertexes, "normals" => normals, "faces" => faces}
  end
  
  def self.openscad_command(inpath, outpath, params={})
    args = ""
    params.each do |param_name, param_value|
      if param_value =~ /^\D+$/
        param_value = "\"#{param_value}\""
      end
      args << " -D '#{param_name}=#{param_value}'"
    end
    args

    "#{OPENSCAD_PATH} -s #{outpath} #{args} #{inpath}"
  end
end